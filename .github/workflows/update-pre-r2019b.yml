name: Update pre-r2019b branch

on:
  push:
    tags: [ 'pre-r2019b*' ]

  workflow_dispatch:

jobs:
  build:
    name: Update the pre-r2019b branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          ref: master
          path: iris-toolbox      

      - name: Merge pre-r2019 with master
        run: |
          cd $GITHUB_WORKSPACE/iris-toolbox
          
          git config user.email "you@example.com"
          git config user.name "Your Name"
          
          git switch pre-r2019b

          git merge -X theirs master
          git status
          
      - name: Remove files deleted from master but modified previously in pre-r2019b
        run: |
          # Files that differed between master and pre-r2019b and were deleted in
          # master will not be resolved (i.e. deleted) in pre-r2019b. Do this
          # manually here:
          # * Look up names of files that are U=unmerged
          # * Remove these files

          cd $GITHUB_WORKSPACE/iris-toolbox
          files_to_remove=$(git diff --name-only --diff-filter=U)
          if [[ $files_to_remove ]]; then
             git rm $files_to_remove
             git status
          fi
          
      - name: Make sure all r2019a/r2019b switches are set correctly
        run: |
          for f in $( ggrep -rl --include=*.m "% [><]=R2019[ab]" .); do
              echo $f
              gsed -i 's/\r//g' $f
              cp $f temp.orig
              gtr '\n' '\v' < temp.orig > temp.replaced
              gsed -i 's/% >=R2019b[ ]*\v%(/% >=R2019b\v%{/g' temp.replaced
              gsed -i 's/%)\v% >=R2019b[ ]*/%}\v% >=R2019b/g' temp.replaced
              gsed -i 's/% <=R2019a[ ]*\v%{/% <=R2019a\v%(/g' temp.replaced
              gsed -i 's/%}\v% <=R2019a[ ]*/%)\v% <=R2019a/g' temp.replaced
              gtr '\v' '\n' < temp.replaced > temp.final
              # cat temp.final
              cp temp.final $f
              rm temp.orig temp.replaced temp.final
          done

      - name: Commit and push
        run: |
          cd $GITHUB_WORKSPACE/iris-toolbox        
          git status
          git add -u .
          git status
          files_to_commit=$(git diff --cached --name-status)
          if [[ $files_to_commit ]]; then
            git commit -m "Update pre-r2019b"
            git push origin pre-r2019b
          fi
          git status
